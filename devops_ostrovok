## DevOps Engineer Challenge

### Полезные замечания перед тем как приступить к решению задач
  * Для практических задач **обязательным является приведение примера команды**, которая решает поставленную задачу. В идеале с входными и выходными данными.
  * Нельзя знать все, но если вы чего то не знаете, скорее всего об этом знает Google.
  * При любой оценке отталкивайтесь от точных чисел.
  * Ограничения по времени нет. Лучше предоставить более полный ответ, чем его отсутствие.

### Задания
  1. На Linux-сервере с 100GB диском закончилось место, но команда du показывает что все файлы вместе занимают только 70GB. В чём может быть проблема?

Частым вопросом на собеседованиях на должность администратора Linux-систем является вопрос: «Вы смотрите на свободное место на диске, его достаточно, а создать файл вы не можете, система отвечает, что свободного места нет, почему»? Ответ заключается в такой сущности в Linux-системах, как inodes. Если просто, то inode — это запись в таблице, содержащая информацию (метаданные) об обычном файле или каталоге, такую как тип файла, разрешения, идентификаторы пользователя и группы, размер, время, атрибуты и т.д. И дело в том, что в зависимости от файловой системы размерность этой таблицы имеет конечные значения. Поэтому могут быть случаи, когда физически места в разделе диска еще достаточно, но создать еще одну запись метаданных для файла уже невозможно, поэтому будет выдано сообщение об ошибке. Данные по свободным inodes можно также узнать с помощью утилит du и df.

du -h --inodes /var/log

df -i /var/log


  2. Веб-сервис возвращает ответ если обращаться к нему с помощью curl http://site, но не отвечает если проверять работоспособность с помощью ping, чем это может быть вызвано?

закрытый порт по протоколу ICMP, который использует программа PING

  3. Как определить открытые порты на удаленном сервере?

nc, telnet

  4. Какой самый быстрый (**производительный**) способ посчитать количество файлов в директории?

ls -a | wc -l

  5. Каким образом можно отслеживать что приложение работающее на сервере имеет проблемы с исходящими tcp-соединениями.

ss -t
telnet host port

  6. Чем отличается "доверенный" SSL сертификат от "самоподписного".

доверенный добавлен пользователем, самоподписанный создан и подписан одним лицом, но возможно еще не добавлен в доверенные

  7. Есть 100 серверов. На них необходимо обновить:
    a) адреса DNS серверов
    b) адреса NTP серверов
    Ваши действия.

  8. Есть лог-файл в котором на каждое посещение пользователя записывается три колонки: ip,"uri",response_time.
  Пример строчки из файла: `"1.2.3.4,/shop/checkout,0.650"`
  Напишите две shell команды:
    a) команда получает этот лог файл в *stdin*, а на выходе отображает *top 15* ip-адресов, с которых были запрошены страницы, содержащие в адресе слово 'checkout'.

cat < 1.log | fgrep -i checkout |head -n 15
1.2.3.4,/shop/checkout,0.650
11.22.33.44,/shop/checkout,0.650
111.222.133.144,/shop/checkout,0.650
41.24.143.155,/shop/checkout,0.650
18.84.83.85,/shop/checkout,0.650
11.12.33.44,/shop/checkout,0.650
111.222.3.144,/shop/checkout,0.650
41.224.13.155,/shop/checkout,0.650
18.84.8.85,/shop/checkout,0.650
22.1.33.44,/shop/checkout,0.650
19.222.133.144,/shop/checkout,0.650
91.24.143.155,/shop/checkout,0.650
18.89.83.85,/shop/checkout,0.650
77.7.33.44,/shop/checkout,0.650
111.27.133.144,/shop/checkout,0.650


    b) команда находит 90-й перцентиль по времени ответа.

  9. Есть две "одновременных" транзакции в базе PostgreSQL. При условии, что id равно 0, какие будут результаты запросов?

| transaction 1                               | transaction 2                      |
|---------------------------------------------|------------------------------------|
| BEGIN;                                      | BEGIN;                             |
| UPDATE table1 SET id = id + 1 RETURNING id; |                                    |
| `-- Какое значение вернёт запрос?`          | SELECT id FROM table1;             |
|                                             | `-- Какое значение вернёт запрос?` |
| COMMIT;                                     | COMMIT;                            |

| transaction 1                               | transaction 2                                   |
|---------------------------------------------|-------------------------------------------------|
| BEGIN;                                      | BEGIN;                                          |
| UPDATE table1 SET id = id + 1 RETURNING id; |                                                 |
| `-- Какое значение вернёт запрос?`          | UPDATE table1 SET id = id + 1 RETURNING id;     |
|                                             | `-- Какое значение вернёт запрос и как быстро?` |
| COMMIT;                                     |                                                 |
|                                             | COMMIT;                                         |

  10. Представьте себе сервис работающий на однотипных виртуальных машинах в облаке. В нем есть API с помощью которого можно удалить или добавить одну уже настроенную виртуальную машину. Для экономии средств стоит задача автоматически менять число запущенных виртуальных машин, например чтобы ночью, когда пользователи спят, было запущенно существенно меньше серверов, чем днём, когда нагрузка возрастает. Допустим, раз в 5 минут запускается ваш скрипт которому надо решить - добавить виртуальную машину, удалить, или ничего не делать. На основании каких метрик вы бы принимали это решение?

